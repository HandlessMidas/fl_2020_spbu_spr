defaultdict(<class 'list'>, {'and(X, Y, R)': ['nand(X, Y, Xy), nand(Xy, Xy, R)'], 'or(X, Y, R)': ['nand(X, X, Xx), nand(Y, Y, Yy), nand(Xx, Yy, R)'], 'neg(X, R)': ['nand(X, X, R)'], 'nand': [''], 'nand(true, true, false)': [''], 'nand(true, false, true)': [''], 'nand(false, true, true)': [''], 'nand(false, false, true)': [''], 'elem(succ(N), cons(H, T), V)': ['elem(N, T, V)'], 'elem(zero, cons(H, T), H)': [''], 'eval(St, not(X), U)': ['eval(St, X, V), neg(U, V)'], 'eval(St, disj(X, Y), U)': ['eval(St, X, V), eval(St, Y, W), or(V, W, U)'], 'eval(St, conj(X, Y), U)': ['eval(St, X, V), eval(St, Y, W), and(V, W, U)'], 'eval(St, var(X), U)': ['elem(X, St, U)']})
eval(St, conj(disj(X, Y), not(var(Z))), true), eval
{'succ(N)', 'not(var(Z))', 'nand(X, Y, Xy)', 'nand(X, X, Xx)', 'var(Z)', 'eval(St, Y, W)', 'nand(Xx, Yy, R)', 'elem(N, T, V)', 'disj(X, Y)', 'eval(St, conj(X, Y), U)', 'neg(U, V)', 'nand(X, X, R)', 'not(X)', 'eval', 'nand(Xy, Xy, R)', 'elem(succ(N), cons(H, T), V)', 'elem(X, St, U)', 'or(X, Y, R)', 'or(V, W, U)', 'eval(St, X, V)', 'conj(X, Y)', 'and(V, W, U)', 'nand(Y, Y, Yy)', 'var(X)', 'zero', 'nand(false, true, true)', 'nand(false, false, true)', 'nand(true, true, false)', 'eval(St, conj(disj(X, Y), not(var(Z))), true)', 'nand', 'cons(H, T)', 'false', 'neg(X, R)', 'and(X, Y, R)', 'eval(St, disj(X, Y), U)', 'conj(disj(X, Y), not(var(Z)))', 'eval(St, not(X), U)', 'eval(St, var(X), U)', 'nand(true, false, true)', 'true', 'elem(zero, cons(H, T), H)'}
eval(St, var(X), U) :- elem(X, St, U).
eval(St, conj(X, Y), U) :- eval(St, X, V), eval(St, Y, W), and(V, W, U).
eval(St, disj(X, Y), U) :- eval(St, X, V), eval(St, Y, W), or(V, W, U).
eval(St, not(X), U) :- eval(St, X, V), neg(U, V).
elem(zero, cons(H, T), H).
elem(succ(N), cons(H, T), V) :- elem(N, T, V).
nand(false, false, true).
nand(false, true, true).
nand(true, false, true).
nand(true, true, false).
nand.
neg(X, R) :- nand(X, X, R).
or(X, Y, R) :- nand(X, X, Xx), nand(Y, Y, Yy), nand(Xx, Yy, R).
and(X, Y, R) :- nand(X, Y, Xy), nand(Xy, Xy, R).
?- eval(St, conj(disj(X, Y), not(var(Z))), true), eval.